{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./api-service.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthOtpPageService {\n  constructor(api, router) {\n    this.api = api;\n    this.router = router;\n  }\n  canActivate() {\n    if (this.api.otptoken.length > 0) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n  static #_ = this.ɵfac = function AuthOtpPageService_Factory(t) {\n    return new (t || AuthOtpPageService)(i0.ɵɵinject(i1.ApiServiceService), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthOtpPageService,\n    factory: AuthOtpPageService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthOtpPageService","constructor","api","router","canActivate","otptoken","length","navigate","_","i0","ɵɵinject","i1","ApiServiceService","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["/Users/rishavghosh/Desktop/final_fontend/src/app/services/auth-otp-page.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ApiServiceService } from './api-service.service';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthOtpPageService {\n\n  constructor(private api: ApiServiceService, private router: Router) { }\n\n  canActivate():boolean{\n    if (this.api.otptoken.length>0 ){\n      return true\n    }else{\n      this.router.navigate(['/login'])\n      return false\n    }\n  }\n}\n"],"mappings":";;;AAOA,OAAM,MAAOA,kBAAkB;EAE7BC,YAAoBC,GAAsB,EAAUC,MAAc;IAA9C,KAAAD,GAAG,GAAHA,GAAG;IAA6B,KAAAC,MAAM,GAANA,MAAM;EAAY;EAEtEC,WAAWA,CAAA;IACT,IAAI,IAAI,CAACF,GAAG,CAACG,QAAQ,CAACC,MAAM,GAAC,CAAC,EAAE;MAC9B,OAAO,IAAI;KACZ,MAAI;MACH,IAAI,CAACH,MAAM,CAACI,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAO,KAAK;;EAEhB;EAAC,QAAAC,CAAA,G;qBAXUR,kBAAkB,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,iBAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlBf,kBAAkB;IAAAgB,OAAA,EAAlBhB,kBAAkB,CAAAiB,IAAA;IAAAC,UAAA,EAFjB;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}