{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nexport let AuthorizationService = class AuthorizationService {\n  constructor(cookie) {\n    this.cookie = cookie;\n  }\n  SetToken(token) {\n    const exp_time = new Date();\n    exp_time.setTime(exp_time.getTime() + 1 * 60 * 60 * 1000);\n    this.cookie.set('Authentication', token, exp_time);\n  }\n  GetToken() {\n    return this.cookie.get('Authentication');\n  }\n  RemoveToken() {\n    this.cookie.delete('Authentication');\n  }\n};\nAuthorizationService = __decorate([Injectable({\n  providedIn: 'root'\n})], AuthorizationService);","map":{"version":3,"names":["Injectable","AuthorizationService","constructor","cookie","SetToken","token","exp_time","Date","setTime","getTime","set","GetToken","get","RemoveToken","delete","__decorate","providedIn"],"sources":["/Users/rishav/Desktop/mail/final_fontend/src/app/services/authorization.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthorizationService {\n\n  constructor(private cookie:CookieService) { }\n\n\n  SetToken(token: string): void{\n    const exp_time=new Date();\n    exp_time.setTime(exp_time.getTime()+1*60*60*1000);\n    this.cookie.set('Authentication', token, exp_time);\n  }\n\n  GetToken(): string{\n    return this.cookie.get('Authentication');\n  }\n\n  RemoveToken(): void{\n    this.cookie.delete('Authentication')\n  }\n}\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAMnC,WAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAE/BC,YAAoBC,MAAoB;IAApB,KAAAA,MAAM,GAANA,MAAM;EAAkB;EAG5CC,QAAQA,CAACC,KAAa;IACpB,MAAMC,QAAQ,GAAC,IAAIC,IAAI,EAAE;IACzBD,QAAQ,CAACE,OAAO,CAACF,QAAQ,CAACG,OAAO,EAAE,GAAC,CAAC,GAAC,EAAE,GAAC,EAAE,GAAC,IAAI,CAAC;IACjD,IAAI,CAACN,MAAM,CAACO,GAAG,CAAC,gBAAgB,EAAEL,KAAK,EAAEC,QAAQ,CAAC;EACpD;EAEAK,QAAQA,CAAA;IACN,OAAO,IAAI,CAACR,MAAM,CAACS,GAAG,CAAC,gBAAgB,CAAC;EAC1C;EAEAC,WAAWA,CAAA;IACT,IAAI,CAACV,MAAM,CAACW,MAAM,CAAC,gBAAgB,CAAC;EACtC;CACD;AAlBYb,oBAAoB,GAAAc,UAAA,EAHhCf,UAAU,CAAC;EACVgB,UAAU,EAAE;CACb,CAAC,C,EACWf,oBAAoB,CAkBhC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}