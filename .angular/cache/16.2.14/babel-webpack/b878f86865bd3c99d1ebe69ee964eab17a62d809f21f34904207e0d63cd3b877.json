{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nexport let SignupComponent = class SignupComponent {\n  constructor(api, router) {\n    this.api = api;\n    this.router = router;\n    this.Signupcheck = new FormGroup({\n      name: new FormControl('', Validators.required),\n      dob: new FormControl('', Validators.required),\n      gender: new FormControl('', Validators.required),\n      mobile: new FormControl('', [Validators.required, Validators.pattern(/^\\d{10}$/)])\n    });\n    this.type = false;\n    this.name_error = false;\n    this.dob_error = false;\n    this.gender_error = false;\n    this.mobile_error = false;\n    this.mobile_check_error = false;\n    this.email_error = false;\n    this.password_error = false;\n    this.confirmpassword_error = false;\n    this.email_check_error = false;\n    this.Email = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.pattern(/^[._a-zA-Z0-9]+$/)]),\n      password: new FormControl('', [Validators.required, Validators.pattern(/^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]+$/)]),\n      confirmpassword: new FormControl('', [Validators.required, Validators.pattern(/^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]+$/)])\n    });\n  }\n  ChangeType() {\n    this.type = !this.type;\n  }\n  NameError() {\n    this.name_error = false;\n  }\n  DobError() {\n    this.dob_error = false;\n  }\n  GenderError() {\n    this.gender_error = false;\n  }\n  MobileError() {\n    this.mobile_error = false;\n    this.mobile_check_error = false;\n  }\n  ChangeTab() {\n    if (this.Signupcheck.valid) {\n      this.api.Mobile({\n        mobile: this.Signupcheck.value.mobile\n      }).subscribe(response => {\n        this.mobile_check_error = response.body.data['successful'] === 'false' ? false : true;\n        this.type = response.body.data['successful'] === 'false' ? false : true;\n      });\n    } else {\n      this.name_error = this.Signupcheck.get('name')?.invalid ? true : false;\n      this.dob_error = this.Signupcheck.get('dob')?.invalid ? true : false;\n      this.gender_error = this.Signupcheck.get('gender')?.invalid ? true : false;\n      this.mobile_error = this.Signupcheck.get('mobile')?.invalid ? true : false;\n    }\n  }\n  EmailError() {\n    this.email_error = false;\n  }\n  PasswordError() {\n    this.password_error = false;\n  }\n  ConfirmPasswordError() {\n    this.confirmpassword_error = false;\n  }\n  Submit() {\n    if (this.Email.valid && this.Email.get('password')?.value === this.Email.get('confirmpassword')?.value) {\n      const email = this.Email.get('email')?.value + '@bengalintituteoftechnology.online';\n      this.api.Email({\n        \"email\": email\n      }).subscribe(response => {\n        if (response.body.data['successful'] === 'false' ? true : false) {\n          const data = {\n            user: this.Signupcheck.value,\n            username: {\n              email: email,\n              password: this.Email.get('password')?.value\n            }\n          };\n          this.api.Signup(data).subscribe(resp => {\n            this.api.otptoken = resp.headers.get('otpverify');\n            this.router.navigate(['/otp']);\n          });\n        } else {\n          this.email_check_error = true;\n        }\n      });\n    } else {\n      this.email_error = this.Email.get('email')?.invalid ? true : false;\n      this.password_error = this.Email.get('password')?.invalid ? true : false;\n      this.confirmpassword_error = this.Email.get('confirmpassword')?.invalid ? true : false;\n      // this.temp=this.Email.get('comfirmpassword')?.value\n    }\n  }\n};\n\nSignupComponent = __decorate([Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})], SignupComponent);","map":{"version":3,"names":["Component","FormControl","FormGroup","Validators","SignupComponent","constructor","api","router","Signupcheck","name","required","dob","gender","mobile","pattern","type","name_error","dob_error","gender_error","mobile_error","mobile_check_error","email_error","password_error","confirmpassword_error","email_check_error","Email","email","password","confirmpassword","ChangeType","NameError","DobError","GenderError","MobileError","ChangeTab","valid","Mobile","value","subscribe","response","body","data","get","invalid","EmailError","PasswordError","ConfirmPasswordError","Submit","user","username","Signup","resp","otptoken","headers","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/rishav/Desktop/mail/final_fontend/src/app/signup/signup.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ApiServiceService } from '../services/api-service.service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent {\n\n\n  constructor(private api: ApiServiceService, private router:Router) { }\n\n  Signupcheck = new FormGroup({\n    name: new FormControl('', Validators.required),\n    dob: new FormControl('', Validators.required),\n    gender: new FormControl('', Validators.required),\n    mobile: new FormControl('', [Validators.required, Validators.pattern(/^\\d{10}$/)])\n  })\n\n  type: boolean = false;\n\n  ChangeType() {\n    this.type = !this.type;\n  }\n\n  name_error: boolean = false;\n  dob_error: boolean = false;\n  gender_error: boolean = false;\n  mobile_error: boolean = false;\n\n  mobile_check_error: boolean = false;\n\n  NameError() {\n    this.name_error = false;\n  }\n  DobError() {\n    this.dob_error = false;\n  }\n  GenderError() {\n    this.gender_error = false;\n  }\n  MobileError() {\n    this.mobile_error = false;\n    this.mobile_check_error=false;\n  }\n\n\n  ChangeTab() {\n    if (this.Signupcheck.valid) {\n      this.api.Mobile({ mobile: this.Signupcheck.value.mobile }).subscribe(\n        response => {\n          \n          this.mobile_check_error = response.body.data['successful'] === 'false' ? false : true;\n          this.type = response.body.data['successful'] === 'false' ? false : true;\n        })\n    } else {\n      this.name_error = this.Signupcheck.get('name')?.invalid ? true : false;\n      this.dob_error = this.Signupcheck.get('dob')?.invalid ? true : false;\n      this.gender_error = this.Signupcheck.get('gender')?.invalid ? true : false;\n      this.mobile_error = this.Signupcheck.get('mobile')?.invalid ? true : false;\n    }\n  }\n\n  email_error: boolean = false;\n  password_error: boolean = false;\n  confirmpassword_error: boolean = false;\n\n  email_check_error: boolean = false;\n\n  EmailError() {\n    this.email_error = false;\n  }\n\n  PasswordError() {\n    this.password_error = false;\n  }\n  ConfirmPasswordError() {\n    this.confirmpassword_error = false;\n  }\n\n  Email = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.pattern(/^[._a-zA-Z0-9]+$/)]),\n    password: new FormControl('', [Validators.required, Validators.pattern(/^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]+$/)]),\n    confirmpassword: new FormControl('', [Validators.required, Validators.pattern(/^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]+$/)])\n  })\n\n  Submit() {\n    if (this.Email.valid && this.Email.get('password')?.value===this.Email.get('confirmpassword')?.value) {\n      const email = this.Email.get('email')?.value + '@bengalintituteoftechnology.online';\n      this.api.Email({ \"email\": email }).subscribe(\n        response => {\n          if (response.body.data['successful'] === 'false' ? true : false) {\n            const data = {\n              user: this.Signupcheck.value,\n              username: { email: email, password: this.Email.get('password')?.value }\n            }\n\n            this.api.Signup(data).subscribe(\n              resp=>{\n                this.api.otptoken=resp.headers.get('otpverify')\n                this.router.navigate(['/otp'])\n              }\n            )\n\n          } else {\n            this.email_check_error = true;\n          }\n        }\n      )\n    } else {\n      this.email_error = this.Email.get('email')?.invalid ? true : false;\n      this.password_error = this.Email.get('password')?.invalid ? true : false;\n      this.confirmpassword_error = this.Email.get('confirmpassword')?.invalid ? true : false;\n      // this.temp=this.Email.get('comfirmpassword')?.value\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}